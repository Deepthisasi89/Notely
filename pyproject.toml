[build-system]
requires = ["setuptools>=68", "setuptools_scm[toml]>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "notely"
requires-python = ">=3.9"
dynamic = ["version"]
dependencies = [
    "jsons==1.6.3",
]

# Enables the usage of setuptools_scm
[tool.setuptools_scm]

[project.optional-dependencies]
lint = [
    "mypy",
    "ruff",
]
test = [
    "pytest==8.3.4",
    "pytest-cov==6.0.0",
    "coverage[toml]==7.6.10",
]
doc = [
    "sphinx"
]
build = [
    "build[virtualenv]==1.2.2.post1",
]
dev = [
    "tox",
    "boto3",
    "jsons==1.6.3",
    "notely[lint]",
    "notely[test]",
    "notely[doc]",
    "notely[build]",
]

[tool.ruff]
line-length = 120
src = ["src"]
extend-exclude = [
    "conf.py",
]
target-version = "py39"
lint.select = ["ALL"]
lint.ignore = [
    "COM812",   # Conflicts with the formatter
    "ISC001",   # Conflicts with the formatter
    "ANN101",   # "missing-type-self"
    "PT001",    # https://github.com/astral-sh/ruff/issues/8796#issuecomment-1825907715
    "PT004",    # https://github.com/astral-sh/ruff/issues/8796#issuecomment-1825907715
    "PT005",    # https://github.com/astral-sh/ruff/issues/8796#issuecomment-1825907715
    "PT023",    # https://github.com/astral-sh/ruff/issues/8796#issuecomment-1825907715
]

[tool.ruff.lint.per-file-ignores]
"tests/**" = [
    "S101", # Use of `assert` detected
    "D103", # Missing docstring in public function
]
"**/__init__.py" = [
    "F401", # Imported but unused
    "F403", # Wildcard imports
]
"docs/**" = [
    "INP001",   # Requires __init__.py but docs folder is not a package.
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`(https://github.com/astral-sh/ruff/issues/5434)
keep-runtime-typing = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.mypy]
disallow_untyped_defs = true # Functions need to be annotated
warn_unused_ignores = true
exclude = [
    "notely-\\d+", # Ignore temporary folder created by setuptools when building an sdist
    "venv.*/",
    "build/",
    "dist/",
]

[tool.pytest.ini_options]
addopts = """
    --import-mode=append
    --cov=notely
    --cov-config=pyproject.toml
    --cov-report=
    """

[tool.coverage.paths]
# Maps coverage measured in site-packages to source files in src
source = ["src/", ".tox/*/lib/python*/site-packages/"]

[tool.coverage.html]
directory = "reports/coverage_html"